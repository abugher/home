#!/bin/bash

if ! terminal-has-color; then
  printf '%s\n' '$(printf %0.3d "${?}") \u@\h:$(sed "s#^${HOME}#~#" <<< "${PWD}") $(if test 0 = "${UID}"; then printf "#"; else printf "$"; fi) '
  exit
fi


function color_code() {
  color="${1}"
  modifier="${2:-0}"
  printf '\\[\\033[%s;%sm\\]' "${modifier}" "${color}"
}


function main() {
  # screen seems not to do italics and thinks modifier code 3 instead means
  # "invert fg/bg".  Otherwise I would prefer that to underline.
  ps1_default_color="$(color_code "${fg[gray]}" "${mod[underline]}")"

  if test 0 = "${UID}"; then 
    ps1_splash_color="$(color_code "${fg[red]}" "${mod[invert]}")"
  else 
    ps1_splash_color="$(color_code "${fg[green]}" "${mod[none]}")"
  fi

  ps1_ret="$(color_code "${bg[blue]}")"'$(printf %3d "${?}")'"${reset}"
  ps1_user="${ps1_default_color}\\u${reset}"
  ps1_at="${ps1_splash_color}@${reset}"
  ps1_host="${ps1_default_color}\\h${reset}"
  ps1_colon="${ps1_splash_color}:${reset}"
  ps1_pwd="${ps1_default_color}"'$(sed "s#^${HOME}#~#" <<< "${PWD}")'"${reset}"
  ps1_sigil="${ps1_splash_color}$(
    if test 0 = "${UID}"; then 
      printf '#'
    else 
      printf '$'
    fi
  )${reset}"

  printf '%s\n' "${ps1_ret} ${ps1_user}${ps1_at}${ps1_host}${ps1_colon}${ps1_pwd}${ps1_sigil} "
}


declare -A fg
fg[black]=30
fg[red]=31
fg[green]=32
fg[amber]=33
fg[blue]=34
fg[magenta]=35
fg[cyan]=36
fg[gray]=37

declare -A bg
bg[black]=40
bg[red]=41
bg[green]=42
bg[amber]=43
bg[blue]=44
bg[magenta]=45
bg[cyan]=46
bg[gray]=47

declare -A mod
mod[none]=0
mod[bright]=1
mod[dim]=2
mod[italics]=3
mod[underline]=4
mod[blink]=5
mod[blink]=6
mod[invert]=7
mod[invisible]=8
mod[strikethrough]=9


reset="$(color_code 0)"


if test "${1}" = 'demo'; then
  demo
else
  main
fi
