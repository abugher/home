# Colors:
# 0 = clear formatting?
# 30 = invisible?
# 31 = red
# 32 = green
# 33 = amber
# 34 = blue
# 35 = magenta
# 36 = cyan
# 37 = gray

# Background colors:
# 40 = black?  invisible?
# 41 = red
# 42 = green
# 43 = amber
# 44 = blue
# 45 = magenta
# 46 = cyan
# 47 = gray

# Modifiers:
# 0 = default
# 1 = bright
# 2 = dim
# 3 = italics
# 4 = underline
# 5 = blink
# 6 = blink
# 7 = invert fg/bg
# 8 = invisible?
# 9 = strikethrough

# Setting foreground clears background.  Not vice versa.


unset color_prompt
if grep -E 'color|xterm|screen' <<< "${TERM}"; then
  color_prompt=yes
else
  colors="$(tput colors 2>/dev/null)"
  if ! grep -q '[0-9]' <<< "${colors}"; then
    colors=0
  fi
  if test "${colors}" -ge 8; then
    color_prompt=yes
  fi
fi


function color_code() {
  color="${1}"
  modifier="${2:-0}"
  printf '\\[\\e[%s;%sm\\]' "${modifier}" "${color}"
}


color_reset="$(color_code 0)"

# screen seems not to do italics and thinks modifier code 3 instead means
# "invert fg/bg".  Otherwise I would prefer that to underline.
ps1_default_color="$(color_code 37 4)"

if test 0 = "${UID}"; then 
  ps1_splash_color="$(color_code 31 7)"
else 
  ps1_splash_color="$(color_code 32 0)"
fi

PS1='$(printf %0.3d "${?}") \u@\h:$(sed "s#^${HOME}#~#" <<< "${PWD}") $(if test 0 = "${UID}"; then printf "#"; else printf "$"; fi) '
if [ "$color_prompt" = yes ]; then
  ps1_ret="$(color_code 44)"'$(printf %3d "${?}")'"${color_reset}"
  ps1_user="${ps1_default_color}\\u${color_reset}"
  ps1_at="${ps1_splash_color}@${color_reset}"
  ps1_host="${ps1_default_color}\\h${color_reset}"
  ps1_colon="${ps1_splash_color}:${color_reset}"
  ps1_pwd="${ps1_default_color}"'$(sed "s#^${HOME}#~#" <<< "${PWD}")'"${color_reset}"
  ps1_sigil="${ps1_splash_color}$(
    if test 0 = "${UID}"; then 
      printf '#'
    else 
      printf '$'
    fi
  )${color_reset}"
  PS1="${ps1_ret} ${ps1_user}${ps1_at}${ps1_host}${ps1_colon}${ps1_pwd}${ps1_sigil} "
  if [ -x /usr/bin/dircolors ]; then
      test -r ~/.dircolors && eval "$(/usr/bin/dircolors -b ~/.dircolors)" || eval "$(/usr/bin/dircolors -b)"
  fi
fi
